import os
import json
from sdp_ai_assistant import Assistant
import config

def run_all_tests():
    """
    Запускает тесты для всех моделей из списка в config.py.
    """
    # Создаем папку для результатов, если она не существует
    results_dir = "tests"
    os.makedirs(results_dir, exist_ok=True)

    # --- Тестовые данные ---
    # 1. Анкета для качественного анализа
    test_sheet = {
        "Имя и Фамилия": "Лэнс Краун",
        "Возраст": 16,
        "Фракция": "Порядок",
        "Ранг Проводника": "A",
        "Атрибуты": {
            "Выносливость": "Мастер",
            "Восприятие": "Эксперт",
            "Техника": "Дилетант",
            "Реакция": "Дилетант",
            "Сила": "Опытный",
            "Холодное Оружие": "Дилетант",
            "Ловкость": "Эксперт",
            "Скрытность": "Новичок"
        },
        "Архетипы": ["Канонир", "Страж"],
        "Внешность": "Высокий и стройный молодой человек с короткими пепельно-голубыми волосами и глазами того же оттенка. Под правым глазом — две вертикальные черные линии, идущие по лицу. Носит два аксессуара: сережку в левом ухе в форме планеты с кольцами и медальон-локет на шее, в котором хранится фотография его младшей сестры, Анны.",
        "Характер": "Лэнс — хладнокровный и рассудительный прагматик. Он редко проявляет эмоции, кроме тех, что касаются его сестры. Его главная черта — одержимость своей целью, ради которой он готов пойти на все. Несмотря на внешнюю отстраненность, он обладает сильным чувством справедливости и готов защищать тех, кто не может постоять за себя. Испытывает панический страх перед насекомыми.",
        "Биография": "Лэнс родился в обычной семье, но в отличие от родителей и сестры, обладал выдающейся силой Проводника. Когда его младшая сестра Анна заболела неизлечимой болезнью, которая начала пожирать ее Ауру, родители отвернулись от нее. В ярости Лэнс отрекся от них и поклялся стать сильнейшим, чтобы найти способ спасти Анну.",
        "Инвентарь": [
            {
                "type": "Осколок",
                "rank": "D",
                "name": "Серьга Сатурна",
                "description": "Небольшая серебряная серьга в форме планеты с кольцами, которую Лэнс носит в левом ухе. Этот Синки постоянно генерирует вокруг тела Лэнса слабое поле аномальной гравитации.",
                "effect": "Вес Лэнса ощущается немного меньше, чем должен. Это позволяет ему прыгать значительно выше обычного человека и на короткое время (1-2 секунды) 'прилипать' к вертикальным поверхностям после прыжка, прежде чем снова начать падать."
            },
            {
                "type": "Эхо",
                "rank": "C",
                "name": "Бутыль Блэкмора",
                "description": "Небольшая стеклянная бутыль, способная захватывать и запечатывать внутри цели, значительно уступающие Лэнсу по силе.",
                "cells": {"Малые": 2}
            }
        ],
        "Ячейки Ауры": {
            "Базовые": "Малые: 20 | Значительные: 4 | Предельные: 2",
            "От Синхронизации": "+13 Малых | +5 Значительных",
            "Итог": "Малые: 33 | Значительные: 9 | Предельные: 2"
        },
        "Контракты": [
            {
                "Название": "Гравиол — Закон Тяготения",
                "Синхронизация": "75%",
                "Дар": "Вы обладаете врожденным чувством массы и плотности. Вы можете на глаз определить вес любого объекта и инстинктивно чувствуете центр тяжести, что дает вам идеальный баланс.",
                "Способности": [
                    {
                        "Название": "Секционное Гравитирование",
                        "Тип Ячейки": "Малая (I)",
                        "Описание": "Лэнс фокусирует гравитационное поле на небольшой области или цели, резко увеличивая ее вес и прижимая к земле.",
                        "Теги": "[Пробивающий (D)] + [Область (E)] + [Неотвратимый (D)]"
                    },
                    {
                        "Название": "Гравиол: Пыточный Столп",
                        "Тип Ячейки": "Значительная (II)",
                        "Описание": "Лэнс призывает из-под земли несколько связанных цепями столпов, которые создают аномально мощное и хаотичное гравитационное поле в указанной зоне, скручивая и разрывая все, что в ней находится.",
                        "Теги": "[Пробивающий (B)] + [Область (D)] + [Неотвратимый (D)]"
                    }
                ],
                "Манифестация": {
                    "Название": "Немезида, Богиня Звезд",
                    "Резонанс Силы": "Пока Немезида активна, все его способности получают +1 к тэгам Пробивающий и Область.",
                    "Предельная Техника": "Склонность Немезиды - Лэнс тратит еще одну Предельную Ячейку. Немезида создаёт в в своих руках Чёрную Сферу, которая начинает притягивать и скручивать с невероятной силой всё вокруг, вырывая здания с фуданментом и деревья прямо с корнями. Это не Чёрная Дыра и она в себя ничего не засасывает, вместо этого она с силой расстягивает цель вокруг сферы, разрывая её, а затем, через маленький промежуток времени, сфера коллапсирует и разбрасывает всё вокруг себя с огромной скоростью и силой в разные стороны, словно шрапнель.",
                    "Тип Ячейки": "2xПредельная (III)",
                    "Теги": "[Пробивающий (S)] + [Область (S)] + [Неотвратимый (S)]"
                }
            },
            {
                "Название": "Ключ Гермеса",
                "Синхронизация": "50%",
                "Дар": "Вы всегда знаете самый короткий путь между двумя точками, даже если он неочевиден (через окно, по крыше, сквозь стену).",
                "Способности": [
                    {
                        "Название": "Транспортные Врата",
                        "Тип Ячейки": "Малая (I)",
                        "Описание": "Лэнс создает портал из зеленого пламени, позволяющий мгновенно переместиться в указанную локацию в пределах видимости.",
                        "Теги": "[Неотвратимый (C)] + [Область (D)] (Телепортация)"
                    }
                ]
            }
        ]
    }

    # 2. Промпт для проверки генерации идей
    idea_prompt = "Я хочу создать персонажа-телохранителя для важной шишки из фракции Порядок на острове Кага. Он должен быть специалистом по защите, но с необычным контрактом, возможно, не боевым."

    # --- Запуск тестов для каждой модели ---
    for model_id in config.MODEL_LIST:
        print(f"\n{'='*20}\nЗапуск теста для модели: {model_id}\n{'='*20}")
        
        try:
            # Инициализация ассистента с текущей моделью
            assistant = Assistant(model_id=model_id)
            
            # --- Тест 1: Валидация анкеты ---
            print(f"[{model_id}] Запускаю валидацию анкеты...")
            validation_result = assistant.validate_character_sheet(test_sheet)
            print(f"[{model_id}] Валидация завершена.")

            # --- Тест 2: Генерация идей ---
            print(f"[{model_id}] Запускаю генерацию идей...")
            idea_result = assistant.generate_character_ideas(idea_prompt)
            print(f"[{model_id}] Генерация идей завершена.")

            # --- Сохранение результатов ---
            result_content = (
                f"# Результаты тестирования для модели: {model_id}\n\n"
                f"## Задача 1: Валидация анкеты\n\n"
                f"**Анкета для проверки:**\n```json\n{json.dumps(test_sheet, ensure_ascii=False, indent=2)}\n```\n\n"
                f"**Результат валидации:**\n```\n{validation_result}\n```\n\n"
                f"{'='*40}\n\n"
                f"## Задача 2: Генерация идей\n\n"
                f"**Запрос:**\n```\n{idea_prompt}\n```\n\n"
                f"**Сгенерированные идеи:**\n```\n{idea_result}\n```\n"
            )

            result_filename = os.path.join(results_dir, f"test_results_{model_id}.md")
            with open(result_filename, 'w', encoding='utf-8') as f:
                f.write(result_content)
            
            print(f"Результаты для модели {model_id} сохранены в файл: {result_filename}")

        except Exception as e:
            print(f"!!! ОШИБКА при тестировании модели {model_id}: {e}")
            error_filename = os.path.join(results_dir, f"test_error_{model_id}.txt")
            with open(error_filename, 'w', encoding='utf-8') as f:
                f.write(f"Произошла ошибка при тестировании модели {model_id}:\n\n{e}")
            print(f"Информация об ошибке сохранена в файл: {error_filename}")

    print(f"\n{'='*20}\nВсе тесты завершены.\n{'='*20}")
    print(f"Проверьте папку '{results_dir}' для ознакомления с результатами.")

if __name__ == "__main__":
    run_all_tests()